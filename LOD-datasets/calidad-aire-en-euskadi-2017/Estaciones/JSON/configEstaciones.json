[
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Coordenates X (ETRS89) using expression value.toNumber()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Coordenates X (ETRS89)",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Coordenates X (ETRS89) using expression grel:value.replace(\",\",\".\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Coordenates X (ETRS89)",
    "expression": "grel:value.replace(\",\",\".\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Coordenates X (ETRS89) using expression value.toNumber()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Coordenates X (ETRS89)",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Coordenates Y (ETRS89) using expression grel:value.replace(\",\",\".\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Coordenates Y (ETRS89)",
    "expression": "grel:value.replace(\",\",\".\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Coordenates Y (ETRS89) using expression value.toNumber()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Coordenates Y (ETRS89)",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Latitude using expression grel:value.replace(\",\",\".\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Latitude",
    "expression": "grel:value.replace(\",\",\".\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Latitude using expression value.toNumber()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Latitude",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Longitude using expression grel:value.replace(\",\",\".\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Longitude",
    "expression": "grel:value.replace(\",\",\".\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Longitude using expression value.toNumber()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Longitude",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-rename",
    "description": "Rename column Coordenates X (ETRS89) to Coordenates_X",
    "oldColumnName": "Coordenates X (ETRS89)",
    "newColumnName": "Coordenates_X"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column Coordenates Y (ETRS89) to Coordenates_Y",
    "oldColumnName": "Coordenates Y (ETRS89)",
    "newColumnName": "Coordenates_Y"
  },
  {
    "op": "core/column-addition",
    "description": "Create column NameURL at index 1 based on column Name using expression grel:value.replace(\" \",\"-\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "NameURL",
    "columnInsertIndex": 1,
    "baseColumnName": "Name",
    "expression": "grel:value.replace(\" \",\"-\")",
    "onError": "set-to-blank"
  }
]